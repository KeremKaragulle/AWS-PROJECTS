AWSTemplateFormatVersion: 2010-09-09
Description: |
  "AWS CloudFormation Sample Template S3_Website_With_CloudFront_Distribution
  Sample template showing how to create a website with a custom DNS name, 
  hosted on Amazon S3 and served via Amazone CloudFront. 
  It assumes you already have a Hosted Zone registered with Amazon Route 53. 
  **WARNING** This template creates an Amazon Route 53 DNS record, 
  an S3 bucket and a CloudFront distribution. You will be billed for the AWS 
  resources used if you create a stack from this template."
Parameters:
  DomainName:
    Description: DNS Name of existing Amazon Route 53 hosted zone
    Type: AWS::Route53::HostedZone::Id
  FullDomainName:
    Type: String
    Description: DNS name of an existing Amazon Route 53 hosted zone
    AllowedPattern: "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)"
    ConstraintDescription: must be a valid DNS zone name.
Resources:
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref mys3bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref mys3bucket
                - /*
            Sid: PublicReadGetObject
            Principal: '*'
  mys3bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref FullDomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
  myCloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref FullDomainName
        Comment: "CDN for S3-backed website"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: 'true'
          SmoothStreaming: false
          TargetOriginId: only-origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
            DomainName: !Select [2, !Split ["/", !GetAtt mys3bucket.WebsiteURL]]
            Id: only-origin
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: XXXXXXX # (Enter your certificate arn please)
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt myCloudfront.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref DomainName
      Name: !Ref FullDomainName # Required
      Region: us-east-1
      SetIdentifier: Simple routing
      Type: A # Required
Outputs:
  BucketName: 
    Description: S3 Bucket URL for Website
    Value: !GetAtt mys3bucket.WebsiteURL
  CloudfrontEndpoint:
    Description: Endpoint for Cloudfront
    Value: !GetAtt myCloudfront.DomainName
  FullDomainName:
    Description: Full Domain Name of my Application
    Value: !Ref FullDomainName